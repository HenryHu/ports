From ff648328dacd097f1fa3abd1cfee4dc611e5af98 Mon Sep 17 00:00:00 2001
From: Eric Niebler <eniebler@boost.org>
Date: Mon, 2 Mar 2020 20:58:51 -0800
Subject: [PATCH] work around clang9 linkage issue with variable templates;
 fixes #1441

---
 include/range/v3/iterator/concepts.hpp  | 7 ++++++-
 include/range/v3/iterator/diffmax_t.hpp | 7 ++++++-
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git include/range/v3/iterator/concepts.hpp include/range/v3/iterator/concepts.hpp
index 6decc3486..27c286d7f 100644
--- include/range/v3/iterator/concepts.hpp
+++ include/range/v3/iterator/concepts.hpp
@@ -159,8 +159,13 @@ namespace ranges
     /// \cond
     namespace detail
     {
+#if RANGES_CXX_INLINE_VARIABLES >= RANGES_CXX_INLINE_VARIABLES_17
         template<typename D>
-        RANGES_INLINE_VAR constexpr bool _is_integer_like_ = std::is_integral<D>::value;
+        inline constexpr bool _is_integer_like_ = std::is_integral<D>::value;
+#else
+        template<typename D, typename = void>
+        constexpr bool _is_integer_like_ = std::is_integral<D>::value;
+#endif
 
         // clang-format off
         template<typename D>
diff --git include/range/v3/iterator/diffmax_t.hpp include/range/v3/iterator/diffmax_t.hpp
index 0b231e8e4..8bda8f258 100644
--- include/range/v3/iterator/diffmax_t.hpp
+++ include/range/v3/iterator/diffmax_t.hpp
@@ -340,8 +340,13 @@ namespace ranges
             }
         };
 
+#if RANGES_CXX_INLINE_VARIABLES >= RANGES_CXX_INLINE_VARIABLES_17
         template<>
-        RANGES_INLINE_VAR constexpr bool _is_integer_like_<diffmax_t> = true;
+        inline constexpr bool _is_integer_like_<diffmax_t> = true;
+#else
+        template<typename Enable>
+        constexpr bool _is_integer_like_<diffmax_t, Enable> = true;
+#endif
     } // namespace detail
     /// \endcond
 } // namespace ranges
