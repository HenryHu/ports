PORTNAME=	poco
DISTVERSION=	1.12.4
DISTVERSIONSUFFIX=	-all
CATEGORIES=	devel net
MASTER_SITES=	https://pocoproject.org/releases/${PORTNAME}-${PORTVERSION}/

MAINTAINER=	henry.hu.sh@gmail.com
COMMENT=	C++ libraries with a network/internet focus
WWW=		https://pocoproject.org/

LICENSE=	BSL
LICENSE_FILE=	${WRKSRC}/LICENSE

LIB_DEPENDS=	libpcre2-8.so:devel/pcre2 \
		libexpat.so:textproc/expat2

USES=		cmake compiler:c++14-lang cpe localbase pkgconfig tar:bz2
USE_LDCONFIG=	yes

CONFLICTS=	poco-ssl

CPE_VENDOR=	pocoproject

CMAKE_ARGS=	-DPOCO_UNBUNDLED:BOOL=ON
SHLIB_MAJOR=	94
PLIST_SUB=	SHLIB_MAJOR=${SHLIB_MAJOR}

OPTIONS_DEFINE=		ACTIVERECORD ENCODINGS JSON JWT MONGODB PAGECOMPILER \
			PROMETHEUS REDIS SSL TEST XML ZIP
OPTIONS_RADIO=		ODBC
OPTIONS_RADIO_ODBC=	IODBC UNIXODBC
OPTIONS_GROUP=		DB
OPTIONS_GROUP_DB=	MYSQL PGSQL SQLITE
OPTIONS_DEFAULT=	ACTIVERECORD ENCODINGS JSON JWT MYSQL MONGODB \
			PAGECOMPILER PGSQL PROMETHEUS REDIS SQLITE SSL \
			XML ZIP
OPTIONS_SUB=		yes

# Database support
DB_DESC=		Database support
MYSQL_USES=		mysql
MYSQL_CMAKE_OFF=	-DENABLE_DATA_MYSQL:BOOL=OFF
PGSQL_USES=		pgsql
PGSQL_CMAKE_OFF=	-DENABLE_DATA_POSTGRESQL:BOOL=OFF
SQLITE_USES=		sqlite
SQLITE_CMAKE_OFF=	-DENABLE_DATA_SQLITE:BOOL=OFF
IODBC_LIB_DEPENDS=	libiodbc.so:databases/libiodbc
IODBC_CMAKE_ON=		-DODBC_INCLUDE_DIRECTORIES:PATH=${LOCALBASE}/include/libiodbc \
			-DODBC_LIBRARIES:FILEPATH=${LOCALBASE}/lib/libiodbc.so
UNIXODBC_LIB_DEPENDS=	libodbc.so:databases/unixODBC
UNIXODBC_CMAKE_ON=	-DODBC_INCLUDE_DIRECTORIES:PATH=${LOCALBASE}/include \
			-DODBC_LIBRARIES:FILEPATH=${LOCALBASE}/lib/libodbc.so

# Key-value store support
MONGODB_DESC=		Enable MongoDB support
MONGODB_CMAKE_OFF=	-DENABLE_MONGODB:BOOL=OFF
REDIS_CMAKE_OFF=	-DENABLE_REDIS:BOOL=OFF

# Components
ACTIVERECORD_CMAKE_OFF=	-DENABLE_ACTIVERECORD:BOOL=OFF \
			-DENABLE_ACTIVERECORD_COMPILER:BOOL=OFF
ACTIVERECORD_DESC=	Enable ActiveRecord ORM and compiler
ENCODINGS_CMAKE_OFF=	-DENABLE_ENCODINGS:BOOL=OFF
ENCODINGS_DESC=		Enable Encodings component
JSON_CMAKE_OFF=		-DENABLE_JSON:BOOL=OFF
JWT_CMAKE_OFF=		-DENABLE_JWT:BOOL=OFF
JWT_DESC=		Enable JWT (JSON Web Token) component
JWT_IMPLIES=		JSON SSL
PAGECOMPILER_CMAKE_OFF=	-DENABLE_PAGECOMPILER:BOOL=OFF \
			-DENABLE_PAGECOMPILER_FILE2PAGE:BOOL=OFF
PAGECOMPILER_DESC=	Enable PageCompiler and File2Page
PROMETHEUS_CMAKE_OFF=	-DENABLE_PROMETHEUS:BOOL=OFF
PROMETHEUS_DESC=	Enable Prometheus component
SSL_USES=		ssl
SSL_CMAKE_OFF=		-DENABLE_CRYPTO:BOOL=OFF \
			-DENABLE_NETSSL:BOOL=OFF \
			-DENABLE_JWT:BOOL=OFF
TEST_CMAKE_ON=		-DENABLE_TESTS:BOOL=ON
TEST_IMPLIES=		JSON SQLITE SSL XML
TEST_TEST_TARGET=	test
XML_CMAKE_OFF=		-DENABLE_XML:BOOL=OFF
ZIP_CMAKE_OFF=		-DENABLE_ZIP:BOOL=OFF
ZIP_DESC=		Enable Zip support

.include <bsd.port.options.mk>

.if ${PORT_OPTIONS:MMYSQL} || ${PORT_OPTIONS:MPGSQL} || ${PORT_OPTIONS:MSQLITE} || ${PORT_OPTIONS:MIODBC} || ${PORT_OPTIONS:MUNIXODBC}
PLIST_SUB+=	DATA=""
.else
PLIST_SUB+=	DATA="@comment "
.endif

.if ${PORT_OPTIONS:MIODBC} || ${PORT_OPTIONS:MUNIXODBC}
PLIST_SUB+=	ODBC=""
.else
CMAKE_ARGS+=	-DENABLE_DATA_ODBC:BOOL=OFF
PLIST_SUB+=	ODBC="@comment "
.endif

.for opt in ${_ALL_OPTIONS}
.if !${OPTIONS_DEFINE:M${opt}}
PLIST_SUB+=	${opt}="@comment "
.endif
.endfor

post-patch:
	@${REINPLACE_CMD} -e \
		's|CMAKE_DEBUG_POSTFIX "d"|CMAKE_DEBUG_POSTFIX ""|' \
		 ${WRKSRC}/cmake/DefinePlatformSpecifc.cmake

.include <bsd.port.mk>
